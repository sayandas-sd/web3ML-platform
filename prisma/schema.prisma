// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  address   String  @unique
  task      Task[]
  
}


model Task {
  id          Int    @id   @default(autoincrement())
  title       String       @default("Choose the most voted one")
  option      Option[]
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  submission  Submission[]
}


model Option {
  id            Int       @id   @default(autoincrement())
  image_url     String
  option_id     Int
  taskId        Int
  task          Task      @relation(fields: [taskId], references: [id])
  submission    Submission[]  
}


model Worker {
  id              Int     @id   @default(autoincrement())
  address         String  @unique
  submission      Submission[]     
}

model Submission {
  id            Int       @id   @default(autoincrement())
  workerId      Int
  worker        Worker    @relation(fields: [workerId], references: [id])
  optionId      Int
  option        Option    @relation(fields: [optionId], references: [id])
  taskId        Int
  task          Task      @relation(fields: [taskId], references: [id])
}

model SubmissionCache {
  id          Int        @id    @default(autoincrement())
  task_id     Int
  option1     Int
  option2     Int
  option3     Int
  option4     Int
  option5     Int
  option6     Int
  option7     Int
}

